apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion configs.android.compileSdk
  buildToolsVersion configs.android.buildTools

  defaultConfig {
    minSdkVersion configs.android.minSdk
    targetSdkVersion configs.android.targetSdk
    testInstrumentationRunner configs.testInstrumentationRunner
    versionCode 1
    versionName "1.0"
    consumerProguardFiles 'consumer-rules.pro'
  }

  compileOptions {
    sourceCompatibility configs.javaCompatibility
    targetCompatibility configs.javaCompatibility
  }

  kotlinOptions {
    jvmTarget = configs.kotlinJvmTarget
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    abortOnError false
    lintConfig rootProject.file('lint.xml')
    htmlReport true
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation libs.kotlin_stdlib_jdk8
  implementation libs.androidx_appcompat
  implementation libs.androidx_constraintlayout
  implementation libs.androidx_room
  implementation libs.androidx_lifecycle_vm_ktx
  implementation libs.androidx_lifecycle_ext
  implementation libs.support_design
  implementation libs.timber
  implementation libs.retrofit
  implementation libs.retrofit_gson
  implementation libs.render_view
  implementation libs.core
  implementation libs.kit
  implementation libs.adapter
  implementation project(":account-cvo")

  kapt libs.androidx_room_compiler
  kapt libs.androidx_lifecycle_compiler

  testImplementation libs.junit
  testImplementation libs.androidx_core_testing

  androidTestImplementation libs.androidx_junit
  androidTestImplementation libs.androidx_test_runner
  androidTestImplementation libs.androidx_test_rules
  androidTestImplementation libs.androidx_core_testing
  androidTestImplementation libs.core
}
